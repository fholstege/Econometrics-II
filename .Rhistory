library(rio)
#-------------------
# Problem 2
# (i): determine size
round((((1.96 + 0.524)/0.1)^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# (ii): determine size with non-compliers
round((((1.96 + 0.524)/((0.8)*0.1))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
#-----------------
# Problem 3
setwd("~/Documents/Econometrics-II")
dfFlu <- import("Data/FluData.dta")
dfFlu_treatment <- dfFlu[dfFlu$TreatGroup == 1,]
dfFlu_control <- dfFlu[dfFlu$TreatGroup == 0,]
# -------- We need to use CONTROL and not TREATMENT group
# (i) Calculate variance for the control group AND size
p <- sum(dfFlu_control$Flu)/nrow(dfFlu_control)
sigma2 <- p*(1-p)
round((((1.96 + 0.84)/0.05)^2) * (sigma2)/(0.8*(1 - 0.8)), 0)
# (ii) Fraction of actual recevers of the flu shot
p_actual <- sum(dfFlu_treatment$Treatment)/nrow(dfFlu_treatment)
round((((1.96 + 0.84)/((p_actual)*0.05))^2) * (0.5*0.5)/(0.8*(1 - 0.8)), 0)
# increase the size
# (iii)
dfFlu$status <- ifelse(dfFlu$TreatGroup == 0, "Control", ifelse(dfFlu$Treatment == 1, "Treated", "Untreated"))
table(dfFlu$status)
View(dfFlu)
dfFlu %>%
group_by(statu)
dfFlu %>%
group_by(status)
library(tidyverse)
dfFlu %>%
group_by(status)
dfFlu %>%
group_by(status) %>%
summarise(Gender_mean <- mean(GenderChild))
# COULD be done easier
dfFlu %>%
group_by(status) %>%
summarise(Gender_mean = mean(GenderChild))
colnames(dfFlu)
table(dfFlu$Nationality)
# COULD be done easier
dfFlu %>%
group_by(status) %>%
summarise(Gender = mean(GenderChild),
Mother_Age = mean(AgeMother),
Mother_Edu = mean(EducationMother),
Marrage = mean(Married),
Nation = mean(Nationality),
Income = mean(Hhincome))
knitr::opts_chunk$set(echo = TRUE)
# Packes required for subsequent analysis. P_load ensures these will be installed and loaded.
if (!require("pacman")) install.packages("pacman")
pacman::p_load(plm,
Formula,
car,
clubSandwich,
lmtest,
foreign,
tidyverse,
xtable,
stargazer,
AER)
type_group <- ifelse(dfFlu$TreatGroup ==1 & dfFlu$Treatment == 0, "Untreated treatment",ifelse(dfFlu$TreatGroup ==1 & dfFlu$Treatment == 1, "Treated treatment","control"))
dfFlu$type_group <- type_group
dfSummary <- dfFlu %>%
group_by(type_group) %>%
summarise(perc_boy = sum(GenderChild)/n(),
mean_age_mother = mean(AgeMother),
mean_edu_mother = mean(EducationMother),
perc_married = sum(Married)/n(),
perc_nationality = sum(Nationality)/n(),
mean_HHincome = mean(Hhincome)
)
dfSummary <- dfFlu %>%
group_by(type_group) %>%
summarise(perc_boy = sum(GenderChild)/n(),
mean_age_mother = mean(AgeMother),
mean_edu_mother = mean(EducationMother),
perc_married = sum(Married)/n(),
perc_nationality = sum(Nationality)/n(),
mean_HHincome = mean(Hhincome)
)
dfFlu %>%
group_by(status) %>%
summarise(perc_boy = sum(GenderChild)/n(),
mean_age_mother = mean(AgeMother),
mean_edu_mother = mean(EducationMother),
perc_married = sum(Married)/n(),
perc_nationality = sum(Nationality)/n(),
mean_HHincome = mean(Hhincome))
# COULD be done easier
dfFlu %>%
group_by(status) %>%
summarise(Gender = mean(GenderChild),
Mother_Age = mean(AgeMother),
Mother_Edu = mean(EducationMother),
Marrage = mean(Married),
Nation = mean(Nationality),
Income = mean(Hhincome))
View(dfFlu)
# COULD be done easier
dfFlu %>%
group_by(status) %>%
summarise(Share = n(),
Gender = mean(GenderChild),
Mother_Age = mean(AgeMother),
Mother_Edu = mean(EducationMother),
Marrage = mean(Married),
Nation = mean(Nationality),
Income = mean(Hhincome))
# COULD be done easier
dfFlu %>%
group_by(status) %>%
summarise(Share = n()/nrwo(dfFlu),
Gender = mean(GenderChild),
Mother_Age = mean(AgeMother),
Mother_Edu = mean(EducationMother),
Marrage = mean(Married),
Nation = mean(Nationality),
Income = mean(Hhincome))
# COULD be done easier
dfFlu %>%
group_by(status) %>%
summarise(Share = n(),
Gender = mean(GenderChild),
Mother_Age = mean(AgeMother),
Mother_Edu = mean(EducationMother),
Marrage = mean(Married),
Nation = mean(Nationality),
Income = mean(Hhincome))
# COULD be done easier
dfFlu %>%
group_by(status) %>%
summarise(Share = n()/12583,
Gender = mean(GenderChild),
Mother_Age = mean(AgeMother),
Mother_Edu = mean(EducationMother),
Marrage = mean(Married),
Nation = mean(Nationality),
Income = mean(Hhincome))
# (iv) OLS with all randomized children
lm_all <- lm(Flu ~ Treatment, dfFlu)
lm_all <- lm(Flu ~ Treatment + GenderChild + AgeMother + Married + Nationality + Hhincome, dfFlu)
# (iv) OLS with all randomized children
lm_all_tr <- lm(Flu ~ Treatment, dfFlu)
# (iv) OLS with all randomized children
lm_all <- lm(Flu ~ Treatment, dfFlu)
lm_all_all <- lm(Flu ~ Treatment + GenderChild + AgeMother + Married + Nationality + Hhincome, dfFlu)
library(AER)
iv_all <- ivreg(Flu ~ Treatment | TreatGroup, dfFlu)
iv_all <- ivreg(Flu ~ Treatment | TreatGroup, dfFlu)
iv_all <- ivreg(dfFlu$Flu ~ dfFlu$Treatment | dfFlu$TreatGroup)
iv_all <- ivreg(Flu ~ Treatment | TreatGroup, dfFlu, data = dfFlu)
iv_all <- ivreg(Flu ~ Treatment | TreatGroup, data=dfFlu)
iv_all_all <- ivreg(Flu ~ Treatment + GenderChild + AgeMother + Married + Nationality + Hhincome | TreatGroup, data=dfFlu)
iv_all_all <- ivreg(Flu ~ Treatment + GenderChild + AgeMother + Married + Nationality + Hhincome | TreatGroup + GenderChild + AgeMother + Married + Nationality + Hhincome, data=dfFlu)
stargazer(lm_all, lm_all_all, iv_all, iv_all_all, lm_all, lm_all_all, iv_all, iv_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
#se = list(NULL, NULL, NULL, NULL),
title="The effect of flu vaccine on the probability to get flu")
stargazer(lm_all, lm_all_all, iv_all, iv_all_all, lm_all, lm_all_all, iv_all, iv_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(NULL, NULL, NULL, NULL,
vcovHC(lm_all, type = "HC1"), vcovHC(lm_all_all, type = "HC1"), vcovHC(iv_all, type = "HC1"), vcovHC(iv_all_all, type = "HC1")),
title="The effect of flu vaccine on the probability to get flu")
sqrt(diag(vcovHC(lm_all, type = "HC1")), sqrt(diag(vcovHC(lm_all_all, type = "HC1")), sqrt(diag(vcovHC(iv_all, type = "HC1")), sqrt(diag(vcovHC(iv_all_all, type = "HC1"))),
sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1")), sqrt(diag(vcovHC(iv_all, type = "HC1")), sqrt(diag(vcovHC(iv_all_all, type = "HC1"))),
sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all_all, type = "HC1"))),
sqrt(diag(vcovHC(iv_all, type = "HC1")))
sqrt(diag(vcovHC(iv_all_all, type = "HC1")))
sqrt(diag(vcovHC(lm_all_all, type = "HC1")))
sqrt(diag(vcovHC(lm_all, type = "HC1")))
stargazer(lm_all, lm_all_all, iv_all, iv_all_all, lm_all, lm_all_all, iv_all, iv_all_all,
stargazer(lm_all, lm_all_all, iv_all, iv_all_all, lm_all, lm_all_all, iv_all, iv_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(NULL, NULL, NULL, NULL, sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all_all, type = "HC1"))),
title="The effect of flu vaccine on the probability to get flu")
stargazer(lm_all, lm_all_all, iv_all, iv_all_all, lm_all, lm_all_all, iv_all, iv_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(NULL, NULL, NULL, NULL, sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
stargazer(lm_all, lm_all_all, iv_all, iv_all_all, lm_all, lm_all_all, iv_all, iv_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(NULL, NULL, NULL, NULL,
sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
stargazer(lm_all, lm_all_all, iv_all, iv_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
#-------------------------
# (vi)
lm_shot <- lm(Treatment ~ TreatGroup, dfFlu)
#-------------------------
# (vi)
lm_shot <- lm(Treatment ~ TreatGroup, dfFlu)
lm_shot_all <- lm(Treatment ~ TreatGroup + GenderChild + AgeMother + Married + Nationality + Hhincome, dfFlu)
se = list(sqrt(diag(vcovHC(lm_shot, type = "HC1"))), sqrt(diag(vcovHC(lm_shot_all, type = "HC1"))),
stargazer(lm_shot, lm_shot_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq", "f"),
se = list(sqrt(diag(vcovHC(lm_shot, type = "HC1"))), sqrt(diag(vcovHC(lm_shot_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
pacman::p_load(plm,
Formula,
car,
clubSandwich,
lmtest,
foreign,
tidyverse,
xtable,
stargazer,
AER)
# get size, given mde
get_size_givenMDE <- function(MDE, fAlpha, fPower, p, Sigma2){
# get t values
t_alpha <- qnorm(1-fAlpha/2, 0,Sigma2)
t_q <-qnorm(1-fPower, 0,Sigma2)
# get the MDE
size <- (((t_alpha - t_q)/MDE)^2) * sigma2/(p*(1-p))
size <- round(size, 0)
return(size)
}
# get parameters for power calculation
MDE = 0.1
fAlpha = 0.05
fPower = 0.7
p = 0.5
sigma2 <- p* (1- p)
# determine size
size = get_size_givenMDE(MDE, fAlpha, fPower, p, sigma2)
# define percentage that does not comply
perc_nonComply <- 0.2
# new size, given rate of non-compliance
new_size = (1/(1-perc_nonComply))*size
# ========== I get different sizes
#-----------------
# Problem 3
setwd("~/Documents/Econometrics-II")
dfFlu <- import("Data/FluData.dta")
dfFlu_treatment <- dfFlu[dfFlu$TreatGroup == 1,]
dfFlu_control <- dfFlu[dfFlu$TreatGroup == 0,]
# percentage that got the flu in the treatment group (got flu shot)
p_flu <- sum(dfFlu_treatment$Flu)/nrow(dfFlu_treatment)
# estimate the sigma2
sigma2_flu <- p*(1-p)
# size of the experiment, given p and sigma2
size_flu <- get_size_givenMDE(0.05, fAlpha, fPower, p_flu, sigma2_flu)
# get data on flu shots, divide in treatment and control
dfFlu <- import("FluData.dta")
#============== Use rio package to import data
#-------------------
# Problem 2
# (i): determine size
round((((1.96 + 0.524)/0.1)^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# (ii): determine size with non-compliers
round((((1.96 + 0.524)/((0.8)*0.1))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
round((((1.96 + 0.524)/((0.8)*0.1))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# ========== I get different sizes
#-----------------
# Problem 3
setwd("~/Documents/Econometrics-II")
dfFlu <- import("Data/FluData.dta")
dfFlu_treatment <- dfFlu[dfFlu$TreatGroup == 1,]
dfFlu_control <- dfFlu[dfFlu$TreatGroup == 0,]
# ======== We need to use CONTROL and not TREATMENT group
# (i) Calculate variance for the control group AND size
p <- sum(dfFlu_control$Flu)/nrow(dfFlu_control)
sigma2 <- p*(1-p)
round((((1.96 + 0.84)/0.05)^2) * (sigma2)/(0.8*(1 - 0.8)), 0)
sigma2
# ========== I get different sizes
round((((1.96 + 0.524)/((0.8)*0.1))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# ========== I get different sizes
round((((1.96 + 0.84)/((0.8)*0.1))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# ========== I get different sizes
round((((1.96 + 0.84)/((0.8)*0.05))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# ========== I get different sizes
round((((1.96 + 0.524)/((0.8)*0.05))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# (ii): determine size with non-compliers
round((((1.96 + 0.524)/((0.8)*0.1))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# ========== I get different sizes
round((((1.96 + 0.524)/((0.8)*0.05))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# (ii): determine size with non-compliers
round((((1.96 + 0.524)/((0.8)*0.1))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
#-----------------
# Problem 3
setwd("~/Documents/Econometrics-II")
dfFlu <- import("Data/FluData.dta")
dfFlu_treatment <- dfFlu[dfFlu$TreatGroup == 1,]
dfFlu_control <- dfFlu[dfFlu$TreatGroup == 0,]
#============== Use rio package to import data
#-------------------
# Problem 2
# (i): determine size
round((((1.96 + 0.524)/0.1)^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# (ii): determine size with non-compliers
round((((1.96 + 0.524)/((0.8)*0.1))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
#============== Use rio package to import data
#-------------------
# Problem 2
# (i): determine size
round((((1.96 + 0.524)/0.1)^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
# (ii): determine size with non-compliers
round((((1.96 + 0.524)/(0.8*0.1))^2) * (0.5*0.5)/(0.5*(1 - 0.5)), 0)
#-----------------
# Problem 3
setwd("~/Documents/Econometrics-II")
#-----------------
# Problem 3
setwd("~/Documents/Econometrics-II")
dfFlu <- import("Data/FluData.dta")
dfFlu_treatment <- dfFlu[dfFlu$TreatGroup == 1,]
dfFlu_control <- dfFlu[dfFlu$TreatGroup == 0,]
# ======== We need to use CONTROL and not TREATMENT group
# (i) Calculate variance for the control group AND size
p <- sum(dfFlu_control$Flu)/nrow(dfFlu_control)
sigma2 <- p*(1-p)
round((((1.96 + 0.84)/0.05)^2) * (sigma2)/(0.8*(1 - 0.8)), 0)
# (ii) Fraction of actual recevers of the flu shot
p_actual <- sum(dfFlu_treatment$Treatment)/nrow(dfFlu_treatment)
round((((1.96 + 0.84)/(p_actual*0.05))^2) * (0.5*0.5)/(0.8*(1 - 0.8)), 0)
round((((1.96 + 0.84)/(0.05))^2) * (0.5*0.5)/(0.8*(1 - 0.8)), 0)
round((((1.96 + 0.84)/(p_actual*0.05))^2) * (sigma2)/(0.8*(1 - 0.8)), 0)
round((((1.96 + 0.84)/(0.05))^2) * (sigma2)/(0.8*(1 - 0.8)), 0)
round((((1.96 + 0.84)/0.05)^2) * (sigma2)/(0.8*(1 - 0.8)), 0)
round((((1.96 + 0.84)/(p_actual*0.05))^2) * (sigma2)/(0.8*(1 - 0.8)), 0)
# (iii) Make a summary table
dfFlu$status <- ifelse(dfFlu$TreatGroup == 0, "Control", ifelse(dfFlu$Treatment == 1, "Treated", "Untreated"))
dfFlu %>%
group_by(status) %>%
summarise(Share = n()/12583,
Gender = mean(GenderChild),
Mother_Age = mean(AgeMother),
Mother_Edu = mean(EducationMother),
Marrage = mean(Married),
Nation = mean(Nationality),
Income = mean(Hhincome))
# (iv) OLS with all randomized children
lm_all <- lm(Flu ~ Treatment, dfFlu[dfFlu$TreatGroup == 1,])
stargazer(lm_all, lm_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
# (v) Estimate IV model woth all children
iv_all <- ivreg(Flu ~ Treatment | TreatGroup, data=dfFlu)
iv_all_all <- ivreg(Flu ~ Treatment + GenderChild + AgeMother + Married + Nationality + Hhincome | TreatGroup + GenderChild + AgeMother + Married + Nationality + Hhincome, data=dfFlu)
stargazer(iv_all, iv_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(sqrt(diag(vcovHC(iv_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
#-------------------------
# (vi)
lm_shot <- lm(Treatment ~ TreatGroup, dfFlu)
lm_shot_all <- lm(Treatment ~ TreatGroup + GenderChild + AgeMother + Married + Nationality + Hhincome, dfFlu)
stargazer(lm_shot, lm_shot_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq", "f"),
se = list(sqrt(diag(vcovHC(lm_shot, type = "HC1"))), sqrt(diag(vcovHC(lm_shot_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
#------------------------------
# (iv) OLS with all randomized children
lm_all <- lm(Flu ~ Treatment, dfFlu[dfFlu$TreatGroup == 1,])
lm_all_all <- lm(Flu ~ Treatment + GenderChild + AgeMother + Married + Nationality + Hhincome, dfFlu[dfFlu$TreatGroup == 1,])
stargazer(lm_all, lm_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
stargazer(lm_shot, lm_shot_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq", "f"),
se = list(sqrt(diag(vcovHC(lm_shot, type = "HC1"))), sqrt(diag(vcovHC(lm_shot_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
r
stargazer(lm_all, lm_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
stargazer(iv_all, iv_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(sqrt(diag(vcovHC(iv_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu")
#------------------------------
# (iv) OLS with all randomized children
lm_all <- lm(Flu ~ Treatment, dfFlu[dfFlu$TreatGroup == 1,])
lm_all_all <- lm(Flu ~ Treatment + GenderChild + AgeMother + Married + Nationality + Hhincome, dfFlu[dfFlu$TreatGroup == 1,])
stargazer(lm_all, lm_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(sqrt(diag(vcovHC(lm_all, type = "HC1"))), sqrt(diag(vcovHC(lm_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu in the treatment group (ATET)")
#---------------------------
# (v) Estimate IV model with all children
iv_all <- ivreg(Flu ~ Treatment | TreatGroup, data = dfFlu)
iv_all_all <- ivreg(Flu ~ Treatment + GenderChild + AgeMother + Married + Nationality + Hhincome | TreatGroup + GenderChild + AgeMother + Married + Nationality + Hhincome, data = dfFlu)
stargazer(iv_all, iv_all_all,
type="text", report="vc*stp",
keep.stat=c("n","adj.rsq"),
se = list(sqrt(diag(vcovHC(iv_all, type = "HC1"))), sqrt(diag(vcovHC(iv_all_all, type = "HC1")))),
title = "The effect of flu vaccine on the probability to get flu with IV")
# dataframe with the percentages per case/arrest and judge
dfJudge <- data.frame( cases = c(0.7, 0.3, 0.4, 0.6), arrests = c(0.4, 0.6, 0.2, 0.5) )
View(dfJudge)
rownames(dfJudge) <- c("Jones-Prison", "Jones-Other", "Smith-Prison", "Smith-Other")
sum(dfJudge$perc_arrest_cond[c(1,2)])
um(dfJudge$perc_arrest_cond[c(3,4)])
sum(dfJudge$perc_arrest_cond[c(3,4)])
PY_1_Z_1 = sum(dfJudge$perc_arrest_cond[c(1,2)])
PY_1_Z_0 = sum(dfJudge$perc_arrest_cond[c(3,4)])
PD_1_Z_1 = dfJudge$perc_sentence[1]
PD_1_Z_0 = dfJudge$perc_sentence[3]
wald_est <- (PY_1_Z_1 - PY_1_Z_0)/ (PD_1_Z_1 - PD_1_Z_0)
wald_est
#============== Use rio package to import data
#-------------------
# Problem 1
# dataframe with the percentages per case/arrest and judge
dfJudge <- data.frame( cases = c(0.7, 0.3, 0.4, 0.6), arrests = c(0.4, 0.6, 0.2, 0.5) )
rownames(dfJudge) <- c("Jones-Prison", "Jones-Other", "Smith-Prison", "Smith-Other")
View(dfJudge)
PY_1_Z_1 = dfJudge[1,1]*dfJudge[1,2]
PY_1_Z_1 = dfJudge[1,1]*dfJudge[1,2] + dfJudge[2,1]*dfJudge[2,2]
PY_1_Z_0 = dfJudge[3,1]*dfJudge[3,2] + dfJudge[4,1]*dfJudge[4,2]
View(dfJudge)
PD_1_Z_1 = dfJudge[1,1]
PD_1_Z_0 = dfJudge[3,1]
wald_est <- (PY_1_Z_1 - PY_1_Z_0)/ (PD_1_Z_1 - PD_1_Z_0)
wald_est
