optim(lParam, LL_selection, vY = vY, mX = mX, Zgamma = Zgamma, vI=vI)
optim(lParam, LL_selection)
lParam[7]
optim(lParam, LL_selection, method="BFGS")
# define log-likelihood function
LL_selection <- function(lParam){
mbeta = c(lParam[1], lParam[2], lParam[3], lParam[4])
mXbeta = mX %*% mbeta
gamma = lParam[5]
rho = lParam[6]
sigma = lParam[7]
logL = sum(
((1 - vI)* log(pnorm(-Zgamma))) +
(vI * log((dnorm((vY- mXbeta)/sigma, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2), log.p = TRUE)))
)
return(-logL)
}
lParam = c(0,0,0,0,0,0,0)
optim(lParam, LL_selection, method="BFGS")
# define log-likelihood function
LL_selection <- function(lParam){
mbeta = c(lParam[1], lParam[2], lParam[3], lParam[4])
mXbeta = mX %*% mbeta
gamma = lParam[5]
rho = lParam[6]
sigma = lParam[7]
logL = sum(
((1 - vI)* log(pnorm(-Zgamma,log.p = TRUE))) +
(vI * log((dnorm((vY- mXbeta)/sigma, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2), log.p = TRUE)))
)
return(-logL)
}
lParam = c(0,0,0,0,0,0,0)
optim(lParam, LL_selection, method="BFGS")
optim(lParam, LL_selection)
lParam = c(1,1,1,1,1,1,1)
optim(lParam, LL_selection)
# define log-likelihood function
LL_selection <- function(lParam){
mbeta = c(lParam[1], lParam[2], lParam[3], lParam[4])
mXbeta = mX %*% mbeta
gamma = lParam[5]
rho = lParam[6]
sigma = lParam[7]
logL = sum(
((1 - vI)* log(pnorm(-Zgamma,mean=1,sd=1,log.p = TRUE))) +
(vI * log((dnorm((vY- mXbeta)/sigma,,mean=1,sd=1, ,log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2),,mean=1,sd=1, ,log.p = TRUE)))
)
return(-logL)
}
lParam = c(1,1,1,1,1,1,1)
optim(lParam, LL_selection)
# define log-likelihood function
LL_selection <- function(lParam){
mbeta = c(lParam[1], lParam[2], lParam[3], lParam[4])
mXbeta = mX %*% mbeta
gamma = lParam[5]
rho = lParam[6]
sigma = lParam[7]
logL = sum(
((1 - vI)* log(pnorm(-Zgamma,mean=1,sd=1,log.p = TRUE))) +
(vI * log((dnorm((vY- mXbeta)/sigma,,mean=1,sd=1, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2),,mean=1,sd=1, ,log.p = TRUE)))
)
return(-logL)
}
lParam = c(1,1,1,1,1,1,1)
optim(lParam, LL_selection)
vY = dfEarnings$logWage
mX = cbind(1, dfEarnings$schooling, dfEarnings$age, dfEarnings$age2)
vI = as.numeric(dfEarnings$unemployed)
# define log-likelihood function
LL_selection <- function(lParam){
mbeta = c(lParam[1], lParam[2], lParam[3], lParam[4])
mXbeta = mX %*% mbeta
gamma = lParam[5]
rho = lParam[6]
sigma = lParam[7]
logL = sum(
((1 - vI)* log(pnorm(-Zgamma,mean=1,sd=1,log.p = TRUE))) +
(vI * log((dnorm((vY- mXbeta)/sigma,mean=1,sd=1, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2),mean=1,sd=1, ,log.p = TRUE)))
)
return(-logL)
}
lParam = c(1,1,1,1,1,1,1)
optim(lParam, LL_selection)
LL_selection(lParam)
# define log-likelihood function
LL_selection <- function(lParam){
mbeta = c(lParam[1], lParam[2], lParam[3], lParam[4])
mXbeta = mX %*% mbeta
gamma = lParam[5]
rho = lParam[6]
sigma = lParam[7]
logL = sum(
((1 - vI)* log(pnorm(-Zgamma,mean=1,sd=1,log.p = TRUE))) +
(vI * log((dnorm((vY- mXbeta)/sigma,mean=1,sd=1, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2),mean=1,sd=1, ,log.p = TRUE)))
)
print(logL)
return(-logL)
}
LL_selection(lParam)
# define log-likelihood function
LL_selection <- function(lParam){
mbeta = c(lParam[1], lParam[2], lParam[3], lParam[4])
mXbeta = mX %*% mbeta
gamma = lParam[5]
rho = lParam[6]
sigma = lParam[7]
part1 = log(pnorm(-Zgamma,mean=1,sd=1,log.p = TRUE))
print(part1)
part2 = log((dnorm((vY- mXbeta)/sigma,mean=1,sd=1, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2),mean=1,sd=1, ,log.p = TRUE))
print(part2)
logL = sum(
((1 - vI)* log(pnorm(-Zgamma,mean=1,sd=1,log.p = TRUE))) +
(vI * log((dnorm((vY- mXbeta)/sigma,mean=1,sd=1, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2),mean=1,sd=1, ,log.p = TRUE)))
)
return(-logL)
}
lParam = c(1,1,1,1,1,1,1)
LL_selection(lParam)
# define log-likelihood function
LL_selection <- function(lParam){
mbeta = c(lParam[1], lParam[2], lParam[3], lParam[4])
mXbeta = mX %*% mbeta
gamma = lParam[5]
rho = lParam[6]
sigma = lParam[7]
part1 = log(pnorm(-Zgamma,mean=1,sd=1,log.p = TRUE))
print(part1[1:10])
part2 = log((dnorm((vY- mXbeta)/sigma,mean=1,sd=1, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2),mean=1,sd=1, ,log.p = TRUE))
print(part2[1:10])
logL = sum(
((1 - vI)* log(pnorm(-Zgamma,mean=1,sd=1,log.p = TRUE))) +
(vI * log((dnorm((vY- mXbeta)/sigma,mean=1,sd=1, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2),mean=1,sd=1, ,log.p = TRUE)))
)
return(-logL)
}
lParam = c(1,1,1,1,1,1,1)
LL_selection(lParam)
# define log-likelihood function
LL_selection <- function(lParam){
mbeta = c(lParam[1], lParam[2], lParam[3], lParam[4])
mXbeta = mX %*% mbeta
gamma = lParam[5]
rho = lParam[6]
sigma = lParam[7]
part1 = pnorm(-Zgamma,mean=1,sd=1,log.p = TRUE)
print(part1[1:10])
part2 = (dnorm((vY- mXbeta)/sigma,mean=1,sd=1, log=TRUE)*(1/sigma))*
pnorm((Zgamma+ (rho/sigma)*(vY- mXbeta))/sqrt(1-rho^2),mean=1,sd=1, ,log.p = TRUE)
print(part2[1:10])
library(rio) # import of data
library(stargazer) # for good tables
#library(tidyverse)
#library(skimr)
setwd("~/Desktop/")
df <- import("NLSY2000RC_V2.csv")
View(df)
table(df$TIME)
colnames(df)
lm_1 <- lm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW + REGS,
data = df)
summary(df)
summary(lm_1)
lm_2 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW + REGS,
data = df)
summary(lm_2)
View(df)
lm_1 <- lm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
lm_2 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
summary(lm_1)
stargazer(lm_1, lm_2)
?stargazer
stargazer(lm_1, lm_2, type = "text")
lm_2 <- lm(EARNINGS ~ ASVABC + S + I(S*ETHBLACK) + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_3, type = "text")
lm_3 <- lm(EARNINGS ~ ASVABC + S + I(S*ETHBLACK) + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_3, type = "text")
lm_3 <- lm(EARNINGS ~ ASVABC + S + S*ETHBLACK + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_3, type = "text")
lm_3 <- lm(EARNINGS ~ ASVABC + S + I(S*ETHBLACK) + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_3, type = "text")
lm_4 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + URBAN + REGNE + REGNC + REGW,
data = df[df$ETHBLACK = 1,])
lm_4 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + URBAN + REGNE + REGNC + REGW,
data = df[,df$ETHBLACK = 1])
table(df$ETHBLACK)
lm_4 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + URBAN + REGNE + REGNC + REGW,
data = df[df$ETHBLACK = 1,])
lm_4 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + URBAN + REGNE + REGNC + REGW,
data = df[df$ETHBLACK = "1",])
df[df$ETHBLACK = 1,]
lm_4 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + URBAN + REGNE + REGNC + REGW,
data = df[df$ETHBLACK == 1,])
lm_4 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + URBAN + REGNE + REGNC + REGW,
data = df[df$ETHBLACK == 0,])
lm_5 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + URBAN + REGNE + REGNC + REGW,
data = df[df$ETHBLACK == 1,])
stargazer(lm_3, lm_4, lm_5, type = "text")
stargazer(lm_3, lm_4, lm_5, type = "text")
View(df)
stargazer(lm_1, lm_2, type = "text")
lm_1 <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
library(tidyverse)
lm_1 <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_1 <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
library(skimr)
lm_1 <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
??plm
library(plm)
lm_1 <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_1 <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
library(rio) # import of data
library(stargazer) # for good tables
library(plm)
#library(tidyverse)
#library(skimr)
setwd("~/Desktop/")
df <- import("NLSY2000RC_V2.csv")
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_pooled2 <- lm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_pooled, lm_pooled2, type = "text")
# Packages required for subsequent analysis. P_load ensures these will be installed and loaded.
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2,
stargazer,
sampleSelection,
lmtest,
AER,
tidyverse)
pacman::p_load(ggplot2,
stargazer,
sampleSelection,
lmtest,
AER,
tidyverse)
# load dataset
df <- read.csv("Data/NLSY2000RC_V2.csv")
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
summary(lm_pooled_no_ab)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
summary(lm_pooled_no_ab)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_pooled2 <- lm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_pooled, lm_pooled2, type = "text")
model = "pooling", index = c("YEAR), data = df)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "YEAR", data = df)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "TIME", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "TIME", data = df)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "TIME", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "TIME", data = df)
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
summary(lm_pooled_no_ab)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
summary(lm_pooled_no_ab)
lm_2 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_1, lm_2, type = "text")
lm_1 <- lm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_1, lm_2, type = "text")
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_pooled2 <- lm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_pooled, lm_pooled2, type = "text")
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_pooled2 <- lm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_pooled, lm_pooled2, type = "text")
lm_pooled2 <- lm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df)
stargazer(lm_pooled, lm_pooled2, type = "text")
View(df)
lm_pooled2 <- lm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df[df$TIME == "0",])
stargazer(lm_pooled, lm_pooled2, type = "text")
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "TIME", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "TIME", data = df)
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
summary(lm_pooled_no_ab)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = c("ID", "TIME"), data = df)
summary(lm_pooled_no_ab)
df$TIME <- as.factor(df$TIME)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
summary(lm_pooled_no_ab)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = ("ID", "TIME"), data = df)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = c("ID", "TIME"), data = df)
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", index = "ID", data = df)
summary(lm_pooled_no_ab)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df, model = "pooling", index = c("ID", "TIME"))
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df, model = "pooling", index = c("ID", "TIME"))
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df, model = "pooling", index = c("ID", "TIME"))
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
stargazer(lm_pooled_no_ab, lm_pooled_ab, type = "text")
summary(lm_pooled_no_ab)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df, model = "pooling", index = c("TIME"))
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df, model = "pooling", index = c("TIME"))
summary(lm_pooled_no_ab)
lm_pooled2 <- lm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df[df$TIME == "10",])
stargazer(lm_pooled, lm_pooled2, type = "text")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(ggplot2,
stargazer,
sampleSelection,
lmtest,
AER,
tidyverse)
# load dataset
df <- read.csv("Data/NLSY2000RC_V2.csv")
df$TIME <- as.factor(df$TIME)
data = df, model = "pooling", index = "ID"
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df, model = "pooling", index = "ID")
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df, model = "pooling", index = "ID")
lm_pooled_ab <- plm(EARNINGS ~ ASVABC + S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df, model = "pooling", index = "ID")
summary(lm_pooled_no_ab)
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df)
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ + ETHBLACK + URBAN + REGNE + REGNC + REGW,
model = "pooling", data = df, index = "ID")
summary(lm_pooled)
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ,
model = "pooling", data = df, index = "ID")
summary(lm_pooled)
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ,
data = df[df$TIME == 0,], model = "pooling", index = "ID")
summary(lm_pooled)
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ,
data = df[df$TIME == 11,], model = "pooling", index = "ID")
summary(lm_pooled)
df[df$TIME == 11,]
lm_pooled <- plm(EARNINGS ~ S + AGE + AGESQ,
data = df[df$TIME == 8,], model = "pooling", index = "ID")
summary(lm_pooled)
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ,
data = df[df$TIME == 8,])
summary(lm_pooled)
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ,
data = df[df$TIME == 1,])
summary(lm_pooled)
View(df)
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ, data = df[df$TIME == 0,])
summary(lm_pooled)
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ, data = df[df$TIME == 2,])
summary(lm_pooled)
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ, data = df[df$TIME == 2,])
summary(lm_pooled)
View(df[df$TIME == 2,])
View(df[df$TIME == 3,])
View(df[df$TIME == 2,])
View(df[df$TIME == 210,])
View(df[df$TIME == 10,])
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ, data = df[df$TIME == 10,])
summary(lm_pooled)
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ, data = df[df$TIME == 10,])
summary(lm_pooled)
library(rio) # import of data
#library(tidyverse)
#library(skimr)
setwd("~/Desktop/")
df <- import("NLSY2000RC_V2.csv")
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ, data = df[df$TIME == 10,])
summary(lm_pooled)
#library(tidyverse)
#library(skimr)
setwd("~/Desktop/")
df <- import("NLSY2000RC_V2.csv")
setwd("~/Documents/Econometrics-II/Assignment2/Data")
#library(tidyverse)
#library(skimr)
setwd("~/Documents/Econometrics-II/Assignment2/Data")
df <- import("NLSY2000RC_V2.csv")
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ, data = df[df$TIME == 10,])
summary(lm_pooled)
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ, data = df[df$TIME == 0,])
summary(lm_pooled)
View(df[df$TIME == 0,])
View(df[df$TIME == 1,])
View(df[df$TIME == 18,])
lm_pooled <- lm(EARNINGS ~ S + AGE + AGESQ, data = df[df$TIME == 18,])
summary(lm_pooled)
View(df[df$TIME == 18,])
View(df)
df$EARNINGS <- log(df$EARNINGS)
# Run poooled OLS including and excluding ASVABC
lm_pooled_no_ab <- plm(EARNINGS ~ S + AGE + AGESQ + TIME + ETHBLACK + URBAN + REGNE + REGNC + REGW,
data = df, model = "pooling", index = "ID")
# Packages required for subsequent analysis. P_load ensures these will be installed and loaded.
if (!require("pacman")) install.packages("pacman")
